// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutAImport } from './routes/layoutA'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutBRouteImport } from './routes/layoutB/route'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutBIndexImport } from './routes/layoutB/index'
import { Route as LayoutAIndexImport } from './routes/layoutA.index'
import { Route as LayoutBIdImport } from './routes/layoutB/$id'
import { Route as LayoutALayoutAAImport } from './routes/layoutA.layoutAA'
import { Route as LayoutAIdImport } from './routes/layoutA.$id'
import { Route as LayoutLayoutDeepImport } from './routes/_layout/_layout-deep'
import { Route as LayoutBLayoutBBIndexImport } from './routes/layoutB/layoutBB/index'
import { Route as LayoutLayoutDeepLayoutCImport } from './routes/_layout/_layout-deep/layoutC'

// Create/Update Routes

const LayoutARoute = LayoutAImport.update({
  path: '/layoutA',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutBRouteRoute = LayoutBRouteImport.update({
  path: '/layoutB',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutBIndexRoute = LayoutBIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutBRouteRoute,
} as any)

const LayoutAIndexRoute = LayoutAIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutARoute,
} as any)

const LayoutBIdRoute = LayoutBIdImport.update({
  path: '/$id',
  getParentRoute: () => LayoutBRouteRoute,
} as any)

const LayoutALayoutAARoute = LayoutALayoutAAImport.update({
  path: '/layoutAA',
  getParentRoute: () => LayoutARoute,
} as any)

const LayoutAIdRoute = LayoutAIdImport.update({
  path: '/$id',
  getParentRoute: () => LayoutARoute,
} as any)

const LayoutLayoutDeepRoute = LayoutLayoutDeepImport.update({
  id: '/_layout-deep',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBLayoutBBIndexRoute = LayoutBLayoutBBIndexImport.update({
  path: '/layoutBB/',
  getParentRoute: () => LayoutBRouteRoute,
} as any)

const LayoutLayoutDeepLayoutCRoute = LayoutLayoutDeepLayoutCImport.update({
  path: '/layoutC',
  getParentRoute: () => LayoutLayoutDeepRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/layoutB': {
      preLoaderRoute: typeof LayoutBRouteImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/layoutA': {
      preLoaderRoute: typeof LayoutAImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_layout-deep': {
      preLoaderRoute: typeof LayoutLayoutDeepImport
      parentRoute: typeof LayoutImport
    }
    '/layoutA/$id': {
      preLoaderRoute: typeof LayoutAIdImport
      parentRoute: typeof LayoutAImport
    }
    '/layoutA/layoutAA': {
      preLoaderRoute: typeof LayoutALayoutAAImport
      parentRoute: typeof LayoutAImport
    }
    '/layoutB/$id': {
      preLoaderRoute: typeof LayoutBIdImport
      parentRoute: typeof LayoutBRouteImport
    }
    '/layoutA/': {
      preLoaderRoute: typeof LayoutAIndexImport
      parentRoute: typeof LayoutAImport
    }
    '/layoutB/': {
      preLoaderRoute: typeof LayoutBIndexImport
      parentRoute: typeof LayoutBRouteImport
    }
    '/_layout/_layout-deep/layoutC': {
      preLoaderRoute: typeof LayoutLayoutDeepLayoutCImport
      parentRoute: typeof LayoutLayoutDeepImport
    }
    '/layoutB/layoutBB/': {
      preLoaderRoute: typeof LayoutBLayoutBBIndexImport
      parentRoute: typeof LayoutBRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LayoutBRouteRoute.addChildren([
    LayoutBIdRoute,
    LayoutBIndexRoute,
    LayoutBLayoutBBIndexRoute,
  ]),
  LayoutRoute.addChildren([
    LayoutLayoutDeepRoute.addChildren([LayoutLayoutDeepLayoutCRoute]),
  ]),
  LayoutARoute.addChildren([
    LayoutAIdRoute,
    LayoutALayoutAARoute,
    LayoutAIndexRoute,
  ]),
])
